---
title: "Raw Material Color Groups"
---

```{r color, out.width = "100%", dpi = 300, echo=TRUE, warning=FALSE, message=FALSE}
# compare colors
library(here)
library(tidyverse)
library(colordistance)
library(recolorize)
library(vegan)
library(ape)

# get image paths
images <- colordistance::getImagePaths('la.gahagan')

# generate color distance matrix
cdm <- imageClusterPipeline(images)

# replace NAs with 0
cdm[is.na(cdm)] = 0
# export color distance matrix
write.csv(cdm, file = "distance_matrix.csv")
```

# Permutational MANOVA

```{r permanovacolor}
# import color distance matrix
c.data <- read.csv("distance_matrix.csv",
                   header = TRUE,
                   as.is=TRUE)

# import qual data
g.data <- read.csv("qdatacol.csv",
                   header = TRUE,
                   as.is=TRUE) %>% 
  select(specimen, ColorGroup)

# preliminaries
colnames(g.data) <- c('X','ColorGroup') # rename columns prior to join
gahagan <- left_join(g.data, c.data, by = "X") # left join by specimen number
gahagan.dist <- gahagan[,3:41] # color distance matrix
set.seed(10) # make results reproducible

# model: biface color as a function of Caddo behavioral region
gahagan.colour <- adonis2(gahagan.dist ~ ColorGroup,
                          data = gahagan,
                          permutations = 10000,
                          method = 'bray')

## does color differ by behavioral region?
gahagan.colour
```

# Ordination + visualization

```{r colorspaceplot, out.width = "100%", dpi = 300, echo=TRUE, warning=FALSE, message=FALSE}
# define add_image function:
add_image <- function(obj,
                      x = NULL,
                      y = NULL,
                      width = NULL,
                      interpolate = TRUE,
                      angle = 0) {
  
  # get current plotting window parameters:
  usr <- graphics::par()$usr
  pin <- graphics::par()$pin
  
  # image dimensions and scaling factor:
  imdim <- dim(obj)
  sf <- imdim[1] / imdim[2]
  
  # set the width of the image (relative to x-axis)
  w <- width / (usr[2] - usr[1]) * pin[1]
  h <- w * sf
  hu <- h / pin[2] * (usr[4] - usr[3])
  
  # plot the image
  graphics::rasterImage(image = obj,
                        xleft = x - (width / 2), xright = x + (width / 2),
                        ybottom = y - (hu / 2), ytop = y + (hu/2),
                        interpolate = interpolate,
                        angle = angle)
}

# colorspace + images
nmds_scores <- scores(metaMDS(comm = as.dist(cdm)))

# set plot parameters
plot(nmds_scores,
     xlim = c(-0.45, 0.4),
     ylim = c(-0.11, 0.13),
     cex = 0.001
     )

#Create convex hulls that highlight behavioral regions
ordihull(
  nmds_scores,
  g.data$ColorGroup,
  draw = c("polygon"),
  col = NULL,
  border = c("#798E87","#C27D38")
)

# add images
for (i in 1:length(images)) {
  
  # read image:
  img <- png::readPNG(images[i]) 
  
  # add image:
  add_image(img, 
            x = nmds_scores[i, 1], 
            y = nmds_scores[i, 2],
            width = 0.025)
}
```

